# Generated by Django 5.1.2 on 2024-10-24 11:24

import django.contrib.postgres.fields
import django.db.models.deletion
import mainapp.models.articles
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('char', models.CharField(blank=True, max_length=1, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Meaning',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PhraseAnnotation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='The plain text of this phrase, without any HTML')),
                ('context', models.TextField(help_text='The plain text of this phrase, including some context on either side')),
                ('english', models.TextField(help_text='English translation of this phrase')),
                ('is_placeholder', models.BooleanField(help_text='True if english field contains placeholder text (before we call GPT)')),
            ],
        ),
        migrations.CreateModel(
            name='Pinyin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tone', models.PositiveSmallIntegerField(help_text='1 to 5 inclusive')),
                ('written', models.CharField(help_text='Written pinyin including tone mark', max_length=6, unique=True)),
                ('written_numeric', models.CharField(blank=True, help_text='Written pinyin with number instead of diacritic (e.g. hao3)', max_length=7, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Syllable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initial', models.CharField(blank=True, max_length=2, null=True)),
                ('final', models.CharField(blank=True, max_length=4, null=True)),
                ('written', models.CharField(max_length=6, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uuid', models.CharField(db_index=True, default=mainapp.models.articles.generate_uuid, max_length=12, unique=True)),
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('english_title', models.CharField(blank=True, max_length=200, null=True)),
                ('english_summary', models.TextField(blank=True, null=True)),
                ('url', models.URLField(blank=True, max_length=2000, null=True)),
                ('body', models.TextField(blank=True, null=True)),
                ('is_ready_to_view', models.BooleanField(default=False, help_text="False until we've run all the celery jobs required to view this article (splitting characters etc)")),
                ('inflated', models.TextField(blank=True, help_text='Inflated XML, including the Chinese title', null=True)),
                ('plaintext', models.TextField(blank=True, help_text='Title and body, stripped of all HTML tags', null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'title')},
            },
        ),
        migrations.CreateModel(
            name='CharacterPinyin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_cn_variant', models.BooleanField(blank=True, help_text='Null unless this pinyin is specific to either Mainland (True) or Taiwan (False)', null=True)),
                ('client_obj', models.JSONField(blank=True, null=True)),
                ('character', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.character')),
                ('meaning', models.ForeignKey(blank=True, help_text='for single-character words', null=True, on_delete=django.db.models.deletion.SET_NULL, to='mainapp.meaning')),
                ('pinyin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.pinyin')),
            ],
            options={
                'unique_together': {('character', 'pinyin')},
            },
        ),
        migrations.CreateModel(
            name='CharacterVariant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variant_type', models.CharField(choices=[('CN', 'Simplified variant'), ('TW', 'Traditional variant')], max_length=2)),
                ('base', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='base_reverse', to='mainapp.character')),
                ('variant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variant_reverse', to='mainapp.character')),
            ],
        ),
        migrations.AddField(
            model_name='character',
            name='pinyins',
            field=models.ManyToManyField(through='mainapp.CharacterPinyin', to='mainapp.pinyin'),
        ),
        migrations.AddField(
            model_name='pinyin',
            name='syllable',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.syllable'),
        ),
        migrations.CreateModel(
            name='Word',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('CN', 'Known to be used in Mainland'), ('TW', 'Known to be used in Taiwan'), ('NU', 'This word is a number')], max_length=2), default=list, size=None)),
                ('char_string', models.CharField(db_index=True, max_length=20)),
                ('pinyin_string', models.CharField(db_index=True, max_length=200)),
                ('pinyin_string_numeric', models.CharField(max_length=200)),
                ('pinyin_slug', models.CharField(blank=True, db_index=True, max_length=100, null=True)),
                ('client_obj', models.JSONField(blank=True, null=True)),
                ('meaning', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.meaning')),
            ],
        ),
        migrations.CreateModel(
            name='WordChar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('punctuation', models.CharField(blank=True, choices=[('，', '，'), ('、', '、'), ('・', '・')], max_length=1, null=True)),
                ('order', models.PositiveSmallIntegerField()),
                ('character_pinyin', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mainapp.characterpinyin')),
                ('word', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.word')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.AddField(
            model_name='word',
            name='characters',
            field=models.ManyToManyField(through='mainapp.WordChar', to='mainapp.characterpinyin'),
        ),
        migrations.CreateModel(
            name='Definition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('order', models.PositiveSmallIntegerField()),
                ('meaning', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.meaning')),
            ],
            options={
                'ordering': ['order'],
                'constraints': [models.UniqueConstraint(fields=('meaning', 'order'), name='unique_order_definition')],
            },
        ),
        migrations.AlterUniqueTogether(
            name='pinyin',
            unique_together={('syllable', 'tone')},
        ),
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field', models.CharField(choices=[('TI', 'Title'), ('BO', 'Body')], help_text='Whether this annotation pertains to title or body of article', max_length=2)),
                ('type', models.CharField(choices=[('CH', 'Character'), ('WO', 'Word'), ('PH', 'Phrase')], max_length=2)),
                ('start', models.PositiveIntegerField()),
                ('length', models.PositiveSmallIntegerField()),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.article')),
                ('cp', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mainapp.characterpinyin')),
                ('phrase', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mainapp.phraseannotation')),
                ('word', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mainapp.word')),
            ],
            options={
                'indexes': [models.Index(fields=['article', 'type', 'start'], name='article_type_start_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='wordchar',
            constraint=models.UniqueConstraint(fields=('word', 'order'), name='unique_order_word'),
        ),
        migrations.AddConstraint(
            model_name='wordchar',
            constraint=models.CheckConstraint(condition=models.Q(models.Q(('character_pinyin__isnull', True), ('punctuation__isnull', False)), models.Q(('character_pinyin__isnull', False), ('punctuation__isnull', True)), _connector='OR'), name='wordchar_character_or_punctuation'),
        ),
        migrations.AddConstraint(
            model_name='word',
            constraint=models.UniqueConstraint(fields=('char_string', 'pinyin_string'), name='unique_char_pinyin'),
        ),
    ]
